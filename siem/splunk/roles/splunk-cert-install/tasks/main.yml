---
- name: create temp folder
  ansible.builtin.tempfile:
    state: directory
    suffix: .siem.splunk
  register: cert_temp

- name: copy root ca and issue ca
  ansible.builtin.copy:
    src: "{{ splunk.cert_path }}/{{ item.src }}"
    dest: "{{ cert_temp.path }}/{{ item.dest }}"
    mode: 0400
  loop:
    - src: root.pem
      dest: root.pem
    - src: issuing_ca.pem
      dest: issuing_ca.pem
    - src: "{{ inventory_hostname }}/key.pem"
      dest: key.pem
    - src: "{{ inventory_hostname }}/cert.pem"
      dest: cert.pem
  loop_control:
    label: "{{ item.src }}"

- name: install ca certificate
  ansible.builtin.shell:
    cmd: cat "{{ splunk.home }}/etc/auth/appsCA.pem" root.pem > ca_bundle.pem
    chdir: "{{ cert_temp.path }}"

- name: generated encrypted web private key
  ansible.builtin.command:
    cmd: "openssl pkcs8 -in key.pem -topk8 -passin pass:{{ ssl_password }} -nocrypt -out unencrypted_key.pem"
    chdir: "{{ cert_temp.path }}"
  no_log: yes

- name: install splunkd certificate
  ansible.builtin.shell:
    cmd: cat cert.pem key.pem issuing_ca.pem > splunkd_server.pem
    chdir: "{{ cert_temp.path }}"

- name: install splunkd certificate
  ansible.builtin.shell:
    cmd: cat cert.pem issuing_ca.pem > web.pem
    chdir: "{{ cert_temp.path }}"

- name: copy keystore and truststore
  ansible.builtin.copy:
    src: "{{ cert_temp.path }}/{{ item.src }}"
    dest: "{{ splunk.home }}/etc/auth/{{ item.dest }}"
    remote_src: yes
    mode: 0400
  loop:
    - src: splunkd_server.pem
      dest: server.pem
    - src: ca_bundle.pem
      dest: cacert.pem
    - src: web.pem
      dest: splunkweb/cert.pem
    - src: unencrypted_key.pem
      dest: splunkweb/privkey.pem
  loop_control:
    label: "{{ item.dest }}"

- name: remove cert temp folder
  ansible.builtin.file:
    path: "{{ cert_temp.path }}"
    state: absent
