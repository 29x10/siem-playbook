---
- name: update kvstore to use wiredTiger engine
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/server.conf"
    section: kvstore
    option: storageEngine
    value: wiredTiger

- name: setup rootCA path
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/server.conf"
    section: sslConfig
    option: sslRootCAPath
    value: "{{ splunk_home }}/etc/auth/cacert.pem"

- name: setup management ssl private key password
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/server.conf"
    section: sslConfig
    option: sslPassword
    value: "{{ splunk_tls_priv_password }}"
  no_log: yes

- name: enable https on splunk web portal
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/web.conf"
    section: settings
    option: enableSplunkWebSSL
    value: "true"

- name: setup web portal ssl private key path
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/web.conf"
    section: settings
    option: privKeyPath
    value: "{{ splunk_home }}/etc/auth/splunkweb/privkey.pem"

- name: setup web portal ssl cert path
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/web.conf"
    section: settings
    option: serverCert
    value: "{{ splunk_home }}/etc/auth/splunkweb/cert.pem"

- name: setup web portal ssl cert path
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/web.conf"
    section: settings
    option: sslPassword
    value: "{{ splunk_tls_priv_password }}"

- name: create temp folder
  ansible.builtin.tempfile:
    state: directory
    prefix: siem_splunk
  register: cert_temp

- name: generate certificate private key
  community.crypto.openssl_privatekey:
    path: "{{ cert_temp.path }}/key.pem"
    passphrase: "{{ splunk_tls_priv_password }}"
    cipher: auto
    format: pkcs8
    size: 2048

- name: create certificate csr file
  community.crypto.openssl_csr:
    path: "{{ cert_temp.path }}/{{ inventory_hostname }}.csr"
    privatekey_path: "{{ cert_temp.path }}/key.pem"
    common_name: "{{ inventory_hostname }}"
    country_name: CN
    state_or_province_name: Shanghai
    locality_name: Shanghai
    organization_name: Morgan Stanley
    organizational_unit_name: Technology
    email_address: cod-siem@ms.com
    extended_key_usage:
      - clientAuth
      - serverAuth
    privatekey_passphrase: "{{ splunk_tls_priv_password }}"
    subject_alt_name: "DNS:{{ inventory_hostname}},DNS:{{ inventory_hostname}}.{{ base_domain }},IP:{{ ansible_default_ipv4.address }}"

- name: generate certificate with own CA certificate
  community.crypto.x509_certificate:
    path: "{{ cert_temp.path }}/{{ inventory_hostname }}.crt"
    csr_path: "{{ cert_temp.path }}/{{ inventory_hostname }}.csr"
    ownca_path: "{{ self_ca_path }}"
    ownca_privatekey_path: "{{ self_ca_key }}"
    ownca_not_after: "+365d"
    provider: ownca

- name: read app ca
  ansible.builtin.slurp:
    src: "{{ splunk_home }}/etc/auth/appsCA.pem"
  register: appsca

- name: install ca certificate
  ansible.builtin.copy:
    content: "{{ appsca['content'] | b64decode }}{{ lookup('file', self_ca_path) }}\n"
    dest: "{{ splunk_home }}/etc/auth/cacert.pem"

- name: read server certificate
  ansible.builtin.slurp:
    src: "{{ cert_temp.path }}/{{ inventory_hostname }}.crt"
  register: server_cert

- name: read server key
  ansible.builtin.slurp:
    src: "{{ cert_temp.path }}/key.pem"
  register: server_key

- name: install server certificate
  ansible.builtin.copy:
    content: "{{ server_cert['content'] | b64decode }}{{ server_key['content'] | b64decode }}{{ lookup('file', self_ca_path) }}\n"
    dest: "{{ splunk_home }}/etc/auth/server.pem"

- name: install web certificate
  ansible.builtin.copy:
    content: "{{ server_cert['content'] | b64decode }}"
    dest: "{{ splunk_home }}/etc/auth/splunkweb/cert.pem"

- name: install private key
  ansible.builtin.copy:
    content: "{{ server_key['content'] | b64decode }}"
    dest: "{{ splunk_home }}/etc/auth/splunkweb/privkey.pem"

- name: setup admin password
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/user-seed.conf"
    section: user_info
    option: USERNAME
    value: admin
  no_log: yes

- name: setup admin password
  community.general.ini_file:
    dest: "{{ splunk_home }}/etc/system/local/user-seed.conf"
    section: user_info
    option: PASSWORD
    value: "{{ admin_pass }}"
  no_log: yes