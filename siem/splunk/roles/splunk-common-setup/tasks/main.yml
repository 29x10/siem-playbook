---
- name: create temp folder
  ansible.builtin.tempfile:
    state: directory
    prefix: siem_splunk
  register: cert_temp

- name: copy self CA
  ansible.builtin.copy:
    src: "{{ splunk.self_ca_path }}/{{ item }}"
    dest: "{{ cert_temp.path }}/{{ item }}"
  loop:
    - "rootCA.pem"
    - "rootCA.key"

- name: generate certificate private key
  community.crypto.openssl_privatekey:
    path: "{{ cert_temp.path }}/key.pem"
    passphrase: "{{ splunk.ssl.password }}"
    cipher: auto
    format: pkcs8
    size: 2048

- name: create certificate csr file
  community.crypto.openssl_csr:
    path: "{{ cert_temp.path }}/{{ inventory_hostname }}.csr"
    privatekey_path: "{{ cert_temp.path }}/key.pem"
    common_name: "{{ inventory_hostname }}"
    country_name: CN
    state_or_province_name: Shanghai
    locality_name: Shanghai
    organization_name: Morgan Stanley
    organizational_unit_name: Technology
    email_address: "{{ splunk.ssl.email_address }}"
    extended_key_usage:
      - clientAuth
      - serverAuth
    privatekey_passphrase: "{{ splunk.ssl.password }}"
    subject_alt_name: "DNS:{{ inventory_hostname}}"

- name: generate certificate with own CA certificate
  community.crypto.x509_certificate:
    path: "{{ cert_temp.path }}/{{ inventory_hostname }}.crt"
    csr_path: "{{ cert_temp.path }}/{{ inventory_hostname }}.csr"
    ownca_path: "{{ cert_temp.path }}/rootCA.pem"
    ownca_privatekey_path: "{{ cert_temp.path }}/rootCA.key"
    ownca_not_after: "+365d"
    provider: ownca

- name: read app ca
  ansible.builtin.slurp:
    src: "{{ splunk.home }}/etc/auth/appsCA.pem"
  register: appsca

- name: install ca certificate
  ansible.builtin.copy:
    content: "{{ appsca['content'] | b64decode }}{{ lookup('file', splunk.self_ca_path + '/rootCA.pem') }}\n"
    dest: "{{ splunk.home }}/etc/auth/cacert.pem"

- name: generated encrypted web private key
  ansible.builtin.command:
    cmd: openssl pkcs8 -in key.pem -topk8 -passin pass:password -nocrypt -out unencrypted_key.pem
    chdir: "{{ cert_temp.path }}"

- name: read server certificate
  ansible.builtin.slurp:
    src: "{{ cert_temp.path }}/{{ inventory_hostname }}.crt"
  register: server_cert

- name: read server key
  ansible.builtin.slurp:
    src: "{{ cert_temp.path }}/unencrypted_key.pem"
  register: server_key

- name: install server certificate
  ansible.builtin.copy:
    content: "{{ server_cert['content'] | b64decode }}{{ server_key['content'] | b64decode }}{{ lookup('file', splunk.self_ca_path + '/rootCA.pem') }}\n"
    dest: "{{ splunk.home }}/etc/auth/server.pem"

- name: install web certificate
  ansible.builtin.copy:
    content: "{{ server_cert['content'] | b64decode }}"
    dest: "{{ splunk.home }}/etc/auth/splunkweb/cert.pem"

- name: install private key
  ansible.builtin.copy:
    content: "{{ server_key['content'] | b64decode }}"
    dest: "{{ splunk.home }}/etc/auth/splunkweb/privkey.pem"

- name: install config
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ splunk.home }}/etc/system/local/{{ item }}"
  loop:
    - server.conf
    - user-seed.conf
    - web.conf