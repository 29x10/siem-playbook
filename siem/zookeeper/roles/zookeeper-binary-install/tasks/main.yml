---
- name: ensure base install location exists
  ansible.builtin.file:
    path: "{{ zookeeper.base }}/{{ zookeeper.version }}"
    state: directory
    mode: 0700
  
- name: install binary
  ansible.builtin.unarchive:
    src: "{{ zookeeper.binary }}"
    dest: "{{ zookeeper.base }}/{{ zookeeper.version }}"
    extra_opts:
      - --strip-components=1

- name: update zookeeper binary permission
  ansible.builtin.file:
    path: "{{ zookeeper.base }}/{{ zookeeper.version }}"
    mode: g-rwx,o-rwx
    state: directory
    recurse: yes

- name: ensure data directory exists
  ansible.builtin.file:
    path: "{{ zookeeper.data_dir }}"
    state: directory
    mode: 0700

- name: create myid file
  ansible.builtin.lineinfile:
    path: "{{ zookeeper.data_dir }}/myid"
    line: "{{ lookup('ansible.utils.index_of', groups['zookeeper'], 'eq', inventory_hostname) + 1 }}"
    create: yes
    mode: 0600

- name: delete file zoo_sample.cfg
  ansible.builtin.file:
    path: "{{ zookeeper.base }}/{{ zookeeper.version }}/conf/zoo_sample.cfg"
    state: absent
